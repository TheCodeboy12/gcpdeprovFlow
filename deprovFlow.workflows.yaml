main:
  params: [args] # Accepts input arguments like {"userKey": "user@example.com"}
  steps:
    - init:
        assign:
          - userKey: ${args.userKey}

          # - listUserGroupsResponse: null
          # These are initialized but not used in the rest of this snippet
    - getUserGroups:
        call: getUserGoogleGroups
        args:
          userKey: ${userKey}
        result: listUserGroupsResponse
    - checkNotEmpty:
        switch:
          - condition: ${map.get(listUserGroupsResponse.body,"groups") == null}
            next: ret
    - loopOverList:
        for:
          value: group
          in: ${listUserGroupsResponse.body.groups}
          steps:
            - deleteFromGroups:
                call: deleteFromGroups
                args:
                  userKey: ${userKey}
                  groupKey: ${group.id}


    - ret:
        return: ${listUserGroupsResponse.body}

getUser:
  params: [userKey]
  steps:
    - init:
        assign:
          - baseURL: ${sys.get_env("GOOG_ADMIN_BASE_URL")}
    - main:
        call: http.get
        args:
          url: ${baseURL + "/users/" + userKey}
          auth:
            type: OAuth2
            scopes:
              ["https://www.googleapis.com/auth/admin.directory.user.readonly"]
        result: getUserResponse
    - ret:
        return: ${getUserResponse}

getUserGoogleGroups:
  params: [userKey]
  steps:
    - init:
        assign:
          - baseURL: ${sys.get_env("GOOG_ADMIN_BASE_URL")}
          - domain: ${sys.get_env("GOOG_DOMAIN")}
    - main:
        call: http.get
        args:
          url: ${baseURL + "/groups/"}
          auth:
            type: OAuth2
            scopes: ["https://apps-apis.google.com/a/feeds/groups/"]
          query:
            userKey: ${userKey}
            domain: ${domain}
        result: getUserGroupsRes
    - ret:
        return: ${getUserGroupsRes}

deleteFromGroups:
  params: [userKey, groupKey]
  steps:
    - init:
        assign:
          - baseURL: ${sys.get_env("GOOG_ADMIN_BASE_URL")}
          - domain: ${sys.get_env("GOOG_DOMAIN")}
    - main:
        call: http.delete
        args:
          url: ${baseURL + "/groups/" + groupKey + "/members/" + userKey}
          auth:
            type: OAuth2
            scopes: ["https://apps-apis.google.com/a/feeds/groups/"]
        result: deleteFromGroupsRes
    - ret:
        return: ${deleteFromGroupsRes}
